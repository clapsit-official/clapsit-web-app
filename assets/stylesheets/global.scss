* {
  font-family: fonts.$font-family;
  margin: 0;
  padding: 0;
}

html {
  font-size: responsive.$desktop-font-size;
}

body {
  background-color: colors.$backgroundColor;
  color: colors.$textPrimary;
}

span.divider {
  display: block;
  width: 100%;
  padding: 0.5px 0;
  background: colors.$dividerColor;
  margin: 1.5rem 0;
}

br,
.cannot-select {
  user-select: none;
}
strong,
b {
  font-weight: bold;
}

a {
  color: colors.$primaryColor;
  &.black {
    color: colors.$textPrimary;
    text-decoration: none;
  }
}

// Auto complete styles
input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
  transition: background-color 5000s ease-in-out 0s;
  -webkit-text-fill-color: colors.$blackColor;
  -webkit-box-shadow: 0 0 0px 1000px #fff inset;
}

button {
  $padding-value: 1rem;
  width: 100%;
  max-width: 600px;
  height: 45px;
  border-radius: 8px;
  border: 1px solid colors.$textSecondary;
  padding: 0.2rem 1rem;
  margin: 8px 0;
  font-size: 1rem;
  transition-duration: animations.$default_transition_duration_value;
  cursor: pointer;
  &.primary {
    @include colors.box-shadow-1();
    background-color: colors.$primaryColor;
    border-color: colors.$primaryColor;
    color: colors.$whiteColor;
    font-weight: bold;
    &.loading {
      @include animations.buttonLoading(colors.$whiteColor);
    }
  }
  &.black {
    @include colors.box-shadow-1();
    background-color: colors.$blackColor;
    border-color: colors.$blackColor;
    color: colors.$whiteColor;
    font-weight: bold;
    &.loading {
      @include animations.buttonLoading(colors.$whiteColor);
    }
  }
  &.white {
    @include colors.box-shadow-2();
    background-color: #fff;
    border-color: #fff;
    color: colors.$blackColor;
    font-weight: 500;
    &.loading {
      @include animations.buttonLoading(colors.$blackColor);
    }
  }

  &.danger {
    @include colors.box-shadow-2();
    background-color: colors.$errorColor;
    border-color: colors.$errorColor;
    color: colors.$whiteColor;
    font-weight: 500;
    &.loading {
      @include animations.buttonLoading(colors.$whiteColor);
    }
  }

  &.ghost {
    background-color: transparent;
    padding: 0;
    margin: 0;
    height: 100%;
    border: none;
  }

  &:hover {
    opacity: 0.9;
  }
  &:active {
    @include colors.box-shadow-3();
  }
  &.disabled,
  &:disabled {
    opacity: 0.1;
    cursor: not-allowed !important;
    & * {
      cursor: not-allowed !important;
    }
  }
  &.loading {
    @include animations.buttonLoading(colors.$blackColor);
    cursor: progress !important;
  }
}

.ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.error-effect {
  border-color: colors.$errorColor !important;
  background-color: colors.$errorSecondary !important;
}
.warning-effect {
  border-color: colors.$warningColor !important;
  background-color: colors.$warningSecondary !important;
}
.error-effect-text {
  color: colors.$errorColor !important;
}
.warning-effect-text {
  color: colors.$warningColor !important;
}

.flex-column-between-center {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
}
.flex-row-between-center {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}
.flex-column-center {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.flex-row-center {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}
.flex-column-start-center {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
}
.flex-row-start-center {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
}
.flex-column-end-center {
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: center;
}
.flex-row-end-center {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  align-items: center;
}
.flex-column-wrap {
  display: flex;
  flex-wrap: wrap;
}
.flex-column-no-wrap {
  display: flex;
  flex-wrap: nowrap;
}
.flex-column-align-start {
  display: flex;
  align-items: flex-start;
}
.flex-column-align-end {
  display: flex;
  align-items: flex-end;
}
.flex-column-justify-start {
  display: flex;
  justify-content: flex-start;
}
.flex-column-justify-end {
  display: flex;
  justify-content: flex-end;
}
.flex-column-space-around {
  display: flex;
  justify-content: space-around;
}
.flex-column-space-evenly {
  display: flex;
  justify-content: space-evenly;
}
.flex-column-wrap {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
}
.flex-column-no-wrap {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
}
.flex-column-align-start {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}
.flex-column-align-end {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
}
.flex-column-justify-start {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}
.flex-column-justify-end {
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
}
.flex-column-space-around {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
}
.flex-column-space-evenly {
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
}
